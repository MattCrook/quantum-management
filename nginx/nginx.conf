events {
    worker_connections  1024;
}

http {
  server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    location /health {
          access_log off;
          default_type text/html;
          return 200 "healthy on localhost\n";
      }

     location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }
  }

  server {
      listen 80 default_server;
      location /health {
          access_log off;
          default_type text/html;
          return 200 "healthy\n";
      }
  }

  server {
      listen 80;
      server_name quantummanagement.quantum.com;
      resolver 1.1.1.1;
      server_tokens off;
      add_header Access-Control-Allow-Origin *;


      # QuantumManagement ROUTES (URLs.py)
      {%- for route in quantummanagement_locations %}
      location = {{ route }} {
          proxy_buffering off;
          proxy_http_version 1.2;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "";
          proxy_set_header Accept-Encoding "";
          proxy_cache_bypass $http_upgrade;
          proxy_ssl_name $host;
          proxy_ssl_server_name on;
          proxy_ssl_session_reuse on;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
      location = {{ route }}/ {
          proxy_buffering off;
          proxy_http_version 1.2;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "";
          proxy_set_header Accept-Encoding "";
          proxy_cache_bypass $http_upgrade;
          proxy_ssl_name $host;
          proxy_ssl_server_name on;
          proxy_ssl_session_reuse on;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }
      {% endfor %}


      location /healthy {
          access_log off;
          default_type text/html;
          return 200 "I'm healthy\n";
      }
  }
}
